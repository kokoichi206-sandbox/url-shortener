// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repository/urls.go

// Package usecase_test is a generated GoMock package.
package usecase_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	transaction "github.com/kokoichi206-sandbox/url-shortener/domain/transaction"
)

// MockURLRepository is a mock of URLRepository interface.
type MockURLRepository struct {
	ctrl     *gomock.Controller
	recorder *MockURLRepositoryMockRecorder
}

// MockURLRepositoryMockRecorder is the mock recorder for MockURLRepository.
type MockURLRepositoryMockRecorder struct {
	mock *MockURLRepository
}

// NewMockURLRepository creates a new mock instance.
func NewMockURLRepository(ctrl *gomock.Controller) *MockURLRepository {
	mock := &MockURLRepository{ctrl: ctrl}
	mock.recorder = &MockURLRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLRepository) EXPECT() *MockURLRepositoryMockRecorder {
	return m.recorder
}

// InsertURL mocks base method.
func (m *MockURLRepository) InsertURL(ctx context.Context, tx transaction.RWTx, originalURL, shortURL string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertURL", ctx, tx, originalURL, shortURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertURL indicates an expected call of InsertURL.
func (mr *MockURLRepositoryMockRecorder) InsertURL(ctx, tx, originalURL, shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertURL", reflect.TypeOf((*MockURLRepository)(nil).InsertURL), ctx, tx, originalURL, shortURL)
}

// SelectShortURL mocks base method.
func (m *MockURLRepository) SelectShortURL(ctx context.Context, tx transaction.RWTx, originalURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectShortURL", ctx, tx, originalURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectShortURL indicates an expected call of SelectShortURL.
func (mr *MockURLRepositoryMockRecorder) SelectShortURL(ctx, tx, originalURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectShortURL", reflect.TypeOf((*MockURLRepository)(nil).SelectShortURL), ctx, tx, originalURL)
}
